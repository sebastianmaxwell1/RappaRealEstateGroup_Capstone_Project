{"version":3,"sources":["components/ListingForm.js","components/Card.js","components/Listings.js","components/Pagination.js","components/GoogleMap.js","containers/Home.js","assets/images/ftpierce.jpeg","containers/About.js","containers/Contact.js","containers/ListingDetail.js","actions/types.js","actions/alert.js","actions/auth.js","containers/Login.js","containers/SignUp.js","components/NotFound.js","components/Alert.js","components/Navbar.js","hocs/Layout.js","reducers/alert.js","reducers/auth.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["ListingForm","props","useState","sale_type","price","bedrooms","home_type","bathrooms","sqft","days_listed","has_photos","open_house","keywords","formData","setFormData","loading","setLoading","onChange","e","target","name","value","className","onSubmit","preventDefault","item","axios","post","headers","then","res","setListings","data","window","scrollTo","catch","err","htmlFor","type","color","height","width","card","x","title","src","photo_main","alt","address","city","state","toString","replace","to","slug","Listings","listings","listingsOnPage","result","map","listing","push","Card","i","length","getListings","pagination","onClick","previous","numbers","itemsPerPage","pageNumber","page","style","content","active","visitPage","count","getNumbers","next","MapContainer","handleChange","setState","handleSelect","geocodeByAddress","results","getLatLng","latLng","console","log","mapCenter","error","showingInfoWindow","activeMarker","selectedPlace","lat","lng","id","this","onSelect","getInputProps","suggestions","getSuggestionItemProps","placeholder","suggestion","backgroundColor","cursor","description","google","initialCenter","center","position","Component","GoogleApiWrapper","apiKey","Home","currentPage","setCurrentPage","listingsPerPage","setActive","indexOfLastListing","indexOfFirstListing","currentListings","slice","Helmet","Pagination","Math","ceil","GoogleMap","About","topSeller","setTopSeller","realtors","setRealtors","useEffect","config","a","get","process","REACT_APP_API_URL","getTopSeller","getRealtors","ftpierce","seller","photo","phone","email","allRealtors","realtor","getAllRealtors","contact","listingDetail","SET_ALERT","REMOVE_ALERT","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","setAlert","msg","alertType","timeout","dispatch","uuid","payload","setTimeout","login","password","body","JSON","stringify","connect","isAuthenticated","auth","required","minLength","signup","password2","notFound","alerts","alert","logout","authLinks","href","guestLinks","exact","layout","Navbar","children","initialState","token","localStorage","getItem","combineReducers","action","filter","setItem","access","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Layout","path","component","Contact","ListingDetail","Login","SignUp","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdf5cb31.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Loader from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\nconst ListingForm = (props) => {\n    const [formData, setFormData] = useState({\n        sale_type: 'For Sale',\n        price: '$0+',\n        bedrooms: '0+',\n        home_type: 'House',\n        bathrooms: '0+',\n        sqft: '1000+',\n        days_listed: '1 or less',\n        has_photos: '1+',\n        open_house: 'false',\n        keywords: ''\n    });\n\n    const { sale_type, price, bedrooms, home_type, bathrooms, sqft, days_listed, has_photos, open_house, keywords } = formData;\n\n    const [loading, setLoading] = useState(false);\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n\n        var item = { sale_type, price, bedrooms, home_type, bathrooms, sqft, days_listed, has_photos, open_house, keywords }\n\n        // console.log(item)\n\n        setLoading(true);\n        axios.post(`http://127.0.0.1:8000/api/listings/search`,  item , config)\n        .then(res => {\n            setLoading(false);\n            props.setListings(res.data);\n            window.scrollTo(0, 0);\n            // console.log(item)\n            // console.log(res.data)\n            \n        })\n        .catch(err => {\n            setLoading(false);\n            window.scrollTo(0, 0);\n        })\n        \n    };\n\n    return (\n        <form className='listingform' onSubmit={e => onSubmit(e)}>\n            <div className='row'>\n                <div className='col-1-of-6'>\n                    <div className='listingform__section'>\n                        <label className='listingform__label' htmlFor='sale_type'>Sale or Rent</label>\n                        <select className='listingform__select' name='sale_type' onChange={e => onChange(e)} value={sale_type}>\n                            <option>For Sale</option>\n                            <option>For Rent</option>\n                        </select>\n                    </div>\n                    <div className='listingform__section'>\n                        <label className='listingform__label' htmlFor='sqft'>Sqft</label>\n                        <select className='listingform__select' name='sqft' onChange={e => onChange(e)} value={sqft}>\n                            <option>1000+</option>\n                            <option>1200+</option>\n                            <option>1500+</option>\n                            <option>2000+</option>\n                            <option>Any</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div className='col-1-of-6'>\n                    <div className='listingform__section'>\n                        <label className='listingform__label' htmlFor='price'>Minimum Price</label>\n                        <select className='listingform__select' name='price' onChange={e => onChange(e)} value={price}>\n                            <option>$0+</option>\n                            <option>$200,000+</option>\n                            <option>$400,000+</option>\n                            <option>$600,000+</option>\n                            <option>$800,000+</option>\n                            <option>$1,000,000+</option>\n                            <option>$1,200,000+</option>\n                            <option>$1,500,000+</option>\n                            <option>Any</option>\n                        </select>\n                    </div>\n                    <div className='listingform__section'>\n                        <label className='listingform__label' htmlFor='days_listed'>Days Listed</label>\n                        <select className='listingform__select' name='days_listed' onChange={e => onChange(e)} value={days_listed}>\n                            <option>1 or less</option>\n                            <option>2 or less</option>\n                            <option>5 or less</option>\n                            <option>10 or less</option>\n                            <option>20 or less</option>\n                            <option>Any</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div className='col-1-of-6'>\n                    <div className='listingform__section'>\n                        <label className='listingform__label' htmlFor='bedrooms'>Bedrooms</label>\n                        <select className='listingform__select' name='bedrooms' onChange={e => onChange(e)} value={bedrooms}>\n                            <option>0+</option>\n                            <option>1+</option>\n                            <option>2+</option>\n                            <option>3+</option>\n                            <option>4+</option>\n                            <option>5+</option>\n                        </select>\n                    </div>\n                    <div className='listingform__section'>\n                        <label className='listingform__label' htmlFor='has_photos'>Has Photos</label>\n                        <select className='listingform__select' name='has_photos' onChange={e => onChange(e)} value={has_photos}>\n                            <option>1+</option>\n                            <option>3+</option>\n                            <option>5+</option>\n                            <option>10+</option>\n                            <option>15+</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div className='col-1-of-6'>\n                    <div className='listingform__section'>\n                        <label className='listingform__label' htmlFor='home_type'>Home Type</label>\n                        <select className='listingform__select' name='home_type' onChange={e => onChange(e)} value={home_type}>\n                            <option>House</option>\n                            <option>Condo</option>\n                            <option>Townhouse</option>\n                        </select>\n                    </div>\n                    <div className='listingform__section'>\n                        <label className='listingform__label' htmlFor='keywords'>Keywords</label>\n                        <input className='listingform__input' name='keywords' type='text' onChange={e => onChange(e)} value={keywords} />\n                    </div>\n                </div>\n\n                <div className='col-1-of-6'>\n                    <div className='listingform__section'>\n                        <label className='listingform__label' htmlFor='bathrooms'>Baths</label>\n                        <select className='listingform__select' name='bathrooms' onChange={e => onChange(e)} value={bathrooms}>\n                            <option>0+</option>\n                            <option>1+</option>\n                            <option>2+</option>\n                            <option>3+</option>\n                            <option>4+</option>\n                        </select>\n                    </div>\n                    <div className='listingform__altsection'>\n                        <label className='listingform__label' htmlFor='open_house'>Open Houses</label>\n                        <input className='listingform__checkbox' name='open_house' type='checkbox' onChange={e => onChange(e)} value={open_house} />\n                    </div>\n                </div>\n\n                <div className='col-1-of-6'>\n                    {loading ?\n                        <div className='listingform__loader'>\n                            <Loader\n                                type=\"Oval\"\n                                color=\"#424242\"\n                                height={50}\n                                width={50}\n                            />\n                        </div> : \n                        <button className='listingform__button listingform__button--primary'>Search Listings!</button>\n                    }\n                </div>\n            </div>\n        </form>\n    );\n};\n\nListingForm.propTypes = {\n    setListings: PropTypes.func.isRequired\n};\n\nexport default ListingForm;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst card = (props) => {\n    const numberWithCommas = (x) => {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    };\n\n    return (\n        <div className='card'>\n            <h3 className='card__title'>{props.title}</h3>\n            <div className='card__header'>\n                <img className='card__header__photo' src={props.photo_main} alt='House' />\n            </div>\n            <p className='card__location'>{props.address}, {props.city}, {props.state}</p>\n            <div className='row'>\n                <div className='col-2-of-3'>\n                    <p className='card__info'>Price: ${numberWithCommas(props.price)}</p>\n                    <p className='card__info'>Bedrooms: {props.bedrooms}</p>\n                    <p className='card__info'>Bathrooms: {props.bathrooms}</p>\n                </div>\n                <div className='col-1-of-3'>\n                    <p className='card__saletype'>{props.sale_type}</p>\n                    <p className='card__hometype'>{props.home_type}</p>\n                    <p className='card__sqft'>Sqft: {props.sqft}</p>\n                </div>\n            </div>\n            <Link className='card__link' to={`/listings/${props.slug}`}>View Listing</Link>\n        </div>\n    );\n};\n\ncard.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo_main: PropTypes.string.isRequired,\n    address: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    state: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    bedrooms: PropTypes.number.isRequired,\n    bathrooms: PropTypes.string.isRequired,\n    sale_type: PropTypes.string.isRequired,\n    home_type: PropTypes.string.isRequired,\n    sqft: PropTypes.number.isRequired,\n    slug: PropTypes.string.isRequired,\n};\n\nexport default card;","import React from 'react';\nimport Card from './Card';\n\nconst Listings = ({ listings }) => {\n    const getListings = () => {\n        let listingsOnPage = [];\n        let result = [];\n\n        listings.map(listing => {\n            return listingsOnPage.push(\n                <Card\n                    title={listing.title}\n                    address={listing.address}\n                    city={listing.city}\n                    state={listing.state}\n                    price={listing.price}\n                    sale_type={listing.sale_type}\n                    home_type={listing.home_type}\n                    bedrooms={listing.bedrooms}\n                    bathrooms={listing.bathrooms}\n                    sqft={listing.sqft}\n                    photo_main={listing.photo_main}\n                    slug={listing.slug}\n                />\n            );\n        });\n\n        for (let i = 0; i < listings.length; i += 3) {\n            result.push(\n                <div className='row'>\n                    <div className='col-1-of-3'>\n                        {listingsOnPage[i]}\n                    </div>\n                    <div className='col-1-of-3'>\n                    {listingsOnPage[i+1] ? listingsOnPage[i+1] : null}\n                    </div>\n                    <div className='col-1-of-3'>\n                    {listingsOnPage[i+2] ? listingsOnPage[i+2] : null}\n                    </div>\n                </div>\n            );\n        }\n\n        return result;\n    };\n\n    return (\n        <div>\n            {getListings()}\n        </div>\n    );\n}\n\nexport default Listings;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst pagination = (props) => {\n    const getNumbers = () => {\n        let numbers = [];\n        let itemsPerPage = props.itemsPerPage;\n        let pageNumber = 1;\n\n        for (let i = 0; i < props.count; i += itemsPerPage) {\n            const page = pageNumber;\n            let style = 'pagination__number';\n            let content = null;\n\n            if (props.active === page) {\n                style = 'pagination__number pagination__number--active';\n                content = (\n                    <div key={i} className={style}>\n                        {pageNumber}\n                    </div>\n                );\n            }\n            else {\n                content = (\n                    <div key={i} onClick={() => props.visitPage(page)} className={style}>\n                        {pageNumber}\n                    </div>\n                );\n            }\n\n            numbers.push(\n                content\n            );\n            pageNumber++;\n        }\n\n        return numbers;\n    };\n    \n    return (\n        <div className='pagination'>\n            <div onClick={() => props.previous()} className='pagination__number'>\n                Previous\n            </div>\n            {getNumbers()}\n            <div onClick={() => props.next()} className='pagination__number'>\n                Next\n            </div>\n        </div>\n    );\n};\n\npagination.propTypes = {\n    itemsPerPage: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired,\n    active: PropTypes.number.isRequired,\n    visitPage: PropTypes.func.isRequired,\n    previous: PropTypes.func.isRequired,\n    next: PropTypes.func.isRequired,\n};\n\nexport default pagination;","import React, { Component } from 'react';\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n      address: '',\n\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n  \n      mapCenter: {\n        lat: 27.4692,\n        lng: -80.2916\n      }\n    };\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n \n  handleSelect = address => {\n    this.setState({ address });\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        console.log('Success', latLng);\n\n        this.setState({ mapCenter: latLng });\n      })\n      .catch(error => console.error('Error', error));\n  };\n \n  render() {\n    return (\n      <div id='googleMaps'>\n        <PlacesAutocomplete\n          value={this.state.address}\n          onChange={this.handleChange}\n          onSelect={this.handleSelect}\n        >\n          {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n            <div>\n              <input\n                {...getInputProps({\n                  placeholder: 'Search Places ...',\n                  className: 'location-search-input',\n                })}\n              />\n              <div className=\"autocomplete-dropdown-container\">\n                {loading && <div>Loading...</div>}\n                {suggestions.map(suggestion => {\n                  const className = suggestion.active\n                    ? 'suggestion-item--active'\n                    : 'suggestion-item';\n                  \n                  const style = suggestion.active\n                    ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                  return (\n                    <div\n                      {...getSuggestionItemProps(suggestion, {\n                        className,\n                        style,\n                      })}\n                    >\n                      <span>{suggestion.description}</span>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </PlacesAutocomplete>\n\n        <Map \n          google={this.props.google}\n          initialCenter={{\n            lat: this.state.mapCenter.lat,\n            lng: this.state.mapCenter.lng\n          }}\n          center={{\n            lat: this.state.mapCenter.lat,\n            lng: this.state.mapCenter.lng\n          }}\n        >\n          <Marker \n            position={{\n              lat: this.state.mapCenter.lat,\n              lng: this.state.mapCenter.lng\n            }} />\n        </Map>\n      </div>\n    )\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: (' AIzaSyDnY85_E14zik_gxWKAY7X1I622L_WBEvM')\n})(MapContainer)\n\n","import React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport ListingForm from '../components/ListingForm';\nimport Listings from '../components/Listings';\nimport Pagination from '../components/Pagination';\nimport GoogleMap from '../components/GoogleMap';\n\nconst Home = () => {\n    const [listings, setListings] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [listingsPerPage, setListingsPerPage] = useState(3);\n    const [active, setActive] = useState(1);\n\n    const indexOfLastListing = currentPage * listingsPerPage;\n    const indexOfFirstListing = indexOfLastListing - listingsPerPage;\n    const currentListings = listings.slice(indexOfFirstListing, indexOfLastListing);\n\n    const visitPage = (page) => {\n        setCurrentPage(page);\n        setActive(page);\n    };\n\n    const previous_number = () => {\n        if (currentPage !== 1) {\n            setCurrentPage(currentPage-1);\n            setActive(currentPage-1);\n        }\n    };\n\n    const next_number = () => {\n        if (currentPage !== Math.ceil(listings.length/3)) {\n            setCurrentPage(currentPage+1);\n            setActive(currentPage+1);\n        }\n    };\n\n    return (\n        <main className='home'>\n            <Helmet>\n                <title>Rappa Realty Group - Home</title>\n                <meta\n                    name='description'\n                    content='Rappa Realty Group Home Page'\n                />\n            </Helmet>\n            <section className='home__form'>\n                <ListingForm setListings={setListings} />\n            </section>\n            <section className='home__listings'>\n                <Listings listings={currentListings} />\n            </section>\n            <section className='home__pagination'>\n                <div className='row'>\n                    {\n                        listings.length !== 0 ? (\n                            <Pagination\n                                itemsPerPage={listingsPerPage}\n                                count={listings.length}\n                                visitPage={visitPage}\n                                previous={previous_number}\n                                next={next_number}\n                                active={active}\n                                setActive={setActive}\n                            />\n                        ) : null\n                    }\n                </div>\n            </section>\n            <section>\n                <GoogleMap />\n            </section>\n        </main>\n    );\n};\n\nexport default Home;;","export default __webpack_public_path__ + \"static/media/ftpierce.d66b0650.jpeg\";","import React, {useState, useEffect, Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport ftpierce from '../assets/images/ftpierce.jpeg';\n\nconst About = () => {\n    const [topSeller, setTopSeller] = useState([]);\n    const [realtors, setRealtors] = useState([]);\n\n    useEffect(() => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n\n        const getTopSeller = async () => {\n            try {\n                const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/realtors/topseller`, config);\n                setTopSeller(res.data);\n            }\n            catch (err) {\n\n            }\n        };\n\n        getTopSeller();\n    }, []);\n\n    useEffect(() => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n\n        const getRealtors = async () => {\n            try {\n                const res = await axios.get(`http://127.0.0.1:8000/api/realtors/`, config);\n                setRealtors(res.data);\n            }\n            catch (err) {\n\n            }\n        };\n\n        getRealtors();\n    }, []);\n\n    const getAllRealtors = () => {\n        let allRealtors = [];\n        let results = [];\n\n        realtors.map(realtor => {\n            return allRealtors.push(\n                <Fragment key={realtor.id}>\n                    <div className='about__display'>\n                        <img className='about__display__image' src={realtor.photo} alt='' />\n                    </div>\n                    <h3 className='about__realtor'>{realtor.name}</h3>\n                    <p className='about__contact'>{realtor.phone}</p>\n                    <p className='about__contact'>{realtor.email}</p>\n                    <p className='about__about'>{realtor.description}</p>\n                </Fragment>\n            );\n        });\n\n        for (let i = 0; i < realtors.length; i += 3) {\n            results.push(\n                <div key={i} className='row'>\n                    <div className='col-1-of-3'>\n                        {allRealtors[i]}\n                    </div>\n                    <div className='col-1-of-3'>\n                        {allRealtors[i+1] ? allRealtors[i+1] : null}\n                    </div>\n                    <div className='col-1-of-3'>\n                        {allRealtors[i+2] ? allRealtors[i+2] : null}\n                    </div>\n                </div>\n            );\n        }\n\n        return results;\n    };  \n\n    const getTopSeller = () => {\n        let result = [];\n\n        topSeller.map(seller => {\n            return result.push(\n                <Fragment key={seller.id}>\n                    <div className='about__display'>\n                        <img className='about__display__image' src={seller.photo} alt='' />\n                    </div>\n                    <h3 className='about__topseller'>Top Seller:</h3>\n                    <p className='about__realtor'>{seller.name}</p>\n                    <p className='about__contact'>{seller.phone}</p>\n                    <p className='about__contact'>{seller.email}</p>\n                    <p className='about__about'>{seller.description}</p>\n                </Fragment>\n            );\n        });\n\n        return result;\n    };\n\n    return (\n        <main className='about'>\n            <Helmet>\n                <title>Rappa Realty Group- About</title>\n                <meta\n                    name='description'\n                    content='Rappa Realty Group - About us'\n                />\n            </Helmet>\n            <header className='about__header'>\n                <h1 className='about__heading'>About Rappa Realty Group</h1>\n            </header>\n            <section className='about__info'>\n                <div className='row'>\n                    <div className='col-3-of-4'>\n                        <h2 className='about__subheading'>What can Rappa sell for you?!</h2>\n                        <p className='about__paragraph'>\n                            Coming soon\n                        </p>    \n                        <div className='about__display'>\n                            <img className='about__display__image' src={ftpierce} alt='' />\n                        </div>\n                        <p className='about__paragraph'>\n                          Coming soon\n                        </p>\n                    </div>\n                    <div className='col-1-of-4'>\n                        {getTopSeller()}\n                    </div>\n                </div>\n            </section>\n            <section className='about__team'>\n                <div className='row'>\n                    <h2 className='about__subheading'>Rappas Realtors!</h2>\n                </div>\n                {getAllRealtors()}\n            </section>\n        </main>\n    );\n};\n\nexport default About;","import React from 'react';\n\nconst contact = () => (\n    <div>\n        contact\n    </div>\n);\n\nexport default contact;","import React from 'react';\n\nconst listingDetail = () => (\n    <div>\n        Listing Details\n    </div>\n);\n\nexport default listingDetail;","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const SIGNUP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';","import { v4 as uuid } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n    const id = uuid();\n    dispatch({\n        type: SET_ALERT,\n        payload: { msg, alertType, id}\n    });\n\n    setTimeout(() => dispatch({type: REMOVE_ALERT, payload: id}), timeout)\n}","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from './types';\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post(`http://127.0.0.1:8000/api/token/`, body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Welcome to Rappa Realty Group!', 'success'));\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL\n        });\n\n        dispatch(setAlert('Error Authenticating', 'error'));\n    }\n};\n\nexport const signup = ({ name, email, password, password2 }) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ name, email, password, password2 }); \n\n    try {\n        const res = await axios.post(`http://127.0.0.1:8000/api/accounts/signup`, body, config);\n\n        dispatch({\n            type: SIGNUP_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(login(email, password));\n    } catch (err) {\n        dispatch({\n            type: SIGNUP_FAIL\n        });\n\n        dispatch(setAlert('Error Authenticating', 'error'));\n    }\n};\n\nexport const logout = () => dispatch => {\n    dispatch(setAlert('You have logged out! Hope to see you soon!.', 'success'));\n    dispatch({ type: LOGOUT });\n}","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        login(email, password);\n    };\n\n    if (isAuthenticated)\n        return <Redirect to='/' />;\n    \n    return (\n        <div className='auth'>\n            <Helmet>\n                <title>Rappa Realty Group - Login</title>\n                <meta\n                    name='description'\n                    content='Rappa Realty Group login page'\n                />\n            </Helmet>\n            <h1 className='auth__title'>Sign In</h1>\n            <p className='auth__lead'>Sign into Rappa Realty Group</p>\n            <form className='auth__form' onSubmit={e => onSubmit(e)}>\n                <div className='auth__form__group'>\n                    <input \n                        className='auth__form__input'\n                        type='email'\n                        placeholder='Email'\n                        name='email' value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='auth__form__group'>\n                    <input\n                        className='auth__form__input'\n                        type='password'\n                        placeholder='Password'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                    />\n                </div>\n                <button className='auth__form__button'>Login</button>\n            </form>\n            <p className='auth__authtext'>\n                What can RAPPA sell for you? Join us and find out! <Link className='auth__authtext__link' to='/signup'>Sign Up</Link>\n            </p>\n        </div>\n    );\n};\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { setAlert } from '../actions/alert';\nimport { signup } from '../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst SignUp = ({ setAlert, signup, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { name, email, password, password2 } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (password !== password2)\n            setAlert('Passwords do not match', 'error');\n        else\n            signup({ name, email, password, password2 });\n    };\n\n    if (isAuthenticated)\n        return <Redirect to='/' />;\n    \n    return (\n        <div className='auth'>\n            <Helmet>\n                <title>Rappa Realty Group- Sign Up</title>\n                <meta\n                    name='description'\n                    content='Rappa Realty Group Sign Up Page'\n                />\n            </Helmet>\n            <h1 className='auth__title'>Sign Up</h1>\n            <p className='auth__lead'>Create your Account with Rappa Realty Group</p>\n            <form className='auth__form' onSubmit={e => onSubmit(e)}>\n                <div className='auth__form__group'>\n                    <input \n                        className='auth__form__input'\n                        type='text'\n                        placeholder='Name'\n                        name='name'\n                        value={name}\n                        onChange={e => onChange(e)}\n                        required \n                    />\n                </div>\n                <div className='auth__form__group'>\n                    <input \n                        className='auth__form__input'\n                        type='email'\n                        placeholder='Email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required \n                    />\n                </div>\n                <div className='auth__form__group'>\n                    <input\n                        className='auth__form__input'\n                        type='password'\n                        placeholder='Password'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                    />\n                </div>\n                <div className='auth__form__group'>\n                    <input\n                        className='auth__form__input'\n                        type='password'\n                        placeholder='Confirm Password'\n                        name='password2'\n                        value={password2}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                    />\n                </div>\n                <button className='auth__form__button'>Register with Rappa!</button>\n            </form>\n            <p className='auth__authtext'>\n                Already have an account? <Link className='auth__authtext__link' to='/login'>Sign In</Link>\n            </p>\n        </div>\n    );\n\n};\n\nSignUp.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    signup: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { setAlert, signup })(SignUp);\n","import React from 'react';\n\nconst notFound = () => (\n    <div className='not found'>\n        <h1 className='notfound__heading'>404 Not Found</h1>\n        <p className='notfound__paragraph'>The link you have requested does not exist</p>\n    </div>\n    \n);\n\nexport default notFound;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) => alerts !== null && alerts.length > 0 && alerts.map(alert => (\n    <div key={alert.id} className={`alert alert--${alert.alertType}`}>\n        { alert.msg }\n    </div>\n));\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n    alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);","import React, { Fragment } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\nimport Alert from './Alert';\nimport PropTypes from 'prop-types';\n\nconst navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n    const authLinks = (\n        <a className='navbar__top__auth__link' onClick={logout} href='#!'>Logout</a>\n    );\n\n    const guestLinks = (\n        <Fragment>\n            <Link className='navbar__top__auth__link' to='/login'>Login</Link>\n            <Link className='navbar__top__auth__link' to='/signup'>Sign Up</Link>\n        </Fragment>\n    );\n\n    return (\n        <Fragment>\n            <nav className='navbar'>\n                <div className='navbar__top'>\n                    <div className='navbar__top__logo'>\n                        <Link className='navbar__top__logo__link' to='/'>Rappa Realty Group</Link>\n                    </div>\n                    <div className='navbar__top__auth'>\n                        { !loading && (<Fragment>{ isAuthenticated ? authLinks : guestLinks }</Fragment>) }\n                    </div>\n                </div>\n                <div className='navbar__bottom'>\n                    <li className='navbar__bottom__item'>\n                        <NavLink className='navbar__bottom__item__link' exact to='/'>Home</NavLink>\n                    </li>\n                    <li className='navbar__bottom__item'>\n                        <NavLink className='navbar__bottom__item__link' exact to='/listings'>Listings</NavLink>\n                    </li>\n                    <li className='navbar__bottom__item'>\n                        <NavLink className='navbar__bottom__item__link' exact to='/about'>About</NavLink>\n                    </li>\n                    <li className='navbar__bottom__item'>\n                        <NavLink className='navbar__bottom__item__link' exact to='/contact'>Contact</NavLink>\n                    </li>\n                </div>\n            </nav>\n            <Alert />\n        </Fragment>\n    );\n};\n\nnavbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logout })(navbar);\n","import React from 'react';\nimport Navbar from '../components/Navbar'\n\nconst layout = (props) => (\n    <div>\n        <Navbar />\n        {props.children}\n    </div>\n)\n\nexport default layout;\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case SET_ALERT:\n            return [...state, payload]\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n}","import {\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.access);\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                token: payload.access\n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false,\n                loading: true\n            }\n        case SIGNUP_FAIL:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            }\n        default:\n            return state\n    }\n}","import {combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\n\nexport default combineReducers({\n    alert,\n    auth\n})\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './containers/Home';\nimport About from './containers/About';\nimport Contact from './containers/Contact';\nimport Listings from './containers/Listings';\nimport ListingDetail from './containers/ListingDetail';\nimport Login from './containers/Login';\nimport SignUp from './containers/SignUp';\nimport NotFound from './components/NotFound';\nimport Layout from './hocs/Layout';\n\n\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport './sass/main.scss';\n\nconst App = () => (\n    <Provider store={store}>\n        <Router>\n            <Layout>\n                <Switch>\n                    <Route exact path='/' component={Home} />\n                    <Route exact path='/about' component={About} />\n                    <Route exact path='/contact' component={Contact} />\n                    <Route exact path='/listings' component={Listings} />\n                    <Route exact path='/listings/:id' component={ListingDetail} />\n                    <Route exact path='/login' component={Login} />\n                    <Route exact path='/signup' component={SignUp} />\n                    <Route component={NotFound} />\n                </Switch>\n            </Layout>\n        </Router>\n    </Provider>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}